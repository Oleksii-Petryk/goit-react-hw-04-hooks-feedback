{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","defaultProps","FeedbackOptions","options","onLeaveFeedback","buttons","map","option","type","button","onClick","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","click","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,iBCAtED,EAAOC,QAAU,CAAC,MAAQ,yB,+JCG1B,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,KAKQF,QAEfA,EAAQK,aAAe,CACrBJ,MAAO,oB,4BCMMK,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKL,UAAWC,IAAOK,QAAvB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLT,UAAWC,IAAOS,OAElBC,QAAS,kBAAMN,EAAgBG,IAJjC,SAMGA,GAHII,qBCkBAC,MA3Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,sCAEE,qCAAQJ,QAEV,yCAEE,qCAAQC,QAEV,qCAEE,qCAAQC,QAEV,uCAEE,qCAAQC,QAEV,oDAEE,qCAAQC,EAAR,cCbOC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCIE,SAASC,IAEtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAEMC,EAAqB,SAACZ,EAAMC,EAASC,GACzC,OAAOF,EAAOC,EAAUC,GAwB1B,OACI,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAtBe,SAACsB,GACxB,OAAQA,GACN,IAAK,OACHJ,EAAQT,EAAO,GACf,MACF,IAAK,UACHU,EAAWT,EAAU,GACrB,MACF,IAAK,MACHU,EAAOT,EAAM,GACb,MACF,QACE,aAaA,cAAC,EAAD,CAASlB,MAAM,aAAf,SACGgB,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,EAAmBZ,EAAMC,EAASC,GACzCE,mBApC4B,SAACJ,GACvC,OAAOc,KAAKC,MAAOf,EAAOY,EAAmBZ,EAAMC,EAASC,GAAQ,KAmCtCc,CAAgChB,KAGtD,cAAC,EAAD,CAAcM,QAAQ,2BCpDlCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.378758bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2xFF2\",\"button\":\"FeedbackOptions_button__JG15G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3fW0-\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h1 className={styles.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.defaultProps = {\n  title: \"Title of section\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.buttons}>\n      {options.map((option) => (\n        <button\n          type=\"button\"\n          className={styles.button}\n          key={uuidv4()}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>\n        Good:\n        <span> {good}</span>\n      </p>\n      <p>\n        Neutral:\n        <span> {neutral}</span>\n      </p>\n      <p>\n        Bad:\n        <span> {bad}</span>\n      </p>\n      <p>\n        Total:\n        <span> {total}</span>\n      </p>\n      <p>\n        Positive feeedback:\n        <span> {positivePercentage}%</span>\n      </p>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import \"./App.css\";\nimport React, {useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\n\nexport default function App() {\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = (good) => {\n    return Math.round((good / countTotalFeedback(good, neutral, bad)) * 100);\n  };\n\n   const onLeaveFeedback = (click) => {\n    switch (click) {\n      case 'good':\n        setGood(good + 1)\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1)\n        break;\n      case 'bad':\n        setBad(bad + 1)\n        break;\n      default:\n        return;\n     };\n   };\n  \n\n  return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {good > 0 || neutral > 0 || bad > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback(good, neutral, bad)}\n              positivePercentage={countPositiveFeedbackPercentage(good)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}